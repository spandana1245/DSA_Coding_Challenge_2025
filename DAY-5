#1
You are given a 3-digit number n, Find whether it is an Armstrong number or not.
CODE:

class Solution:
    def armstrongNumber (self, n):
        # code here 
        res=0
        temp=n
        while temp:
            rem=temp%10
            res=res+(rem*rem*rem)
            temp=temp//10
        return res==n

#2
Implement Quick Sort, a Divide and Conquer algorithm, to sort an array, arr[] in ascending order.
CODE:
class Solution:
    def quickSort(self, arr, low, high):
        #code here 
        if low < high:
            pi = self.partition(arr, low, high)
            self.quickSort(arr, low, pi - 1)
            self.quickSort(arr, pi + 1, high)
           
    def swap(self,arr, i, j):
        arr[i], arr[j] = arr[j], arr[i] 

    def partition(self, arr, low, high):
        #code here
        pivot = arr[high]
        i = low - 1
        for j in range(low, high):
            if arr[j] < pivot:
                i += 1
                self.swap(arr, i, j)
        self.swap(arr, i + 1, high)
        return i + 1

#3
Alice and Bob are playing a game on a string.

You are given a string s, Alice and Bob will take turns playing the following game where Alice starts first:

On Alice's turn, she has to remove any non-empty substring from s that contains an odd number of vowels.
On Bob's turn, he has to remove any non-empty substring from s that contains an even number of vowels.
The first player who cannot make a move on their turn loses the game. We assume that both Alice and Bob play optimally.

Return true if Alice wins the game, and false otherwise.

The English vowels are: a, e, i, o, and u.

CODE:
class Solution(object):
    def doesAliceWin(self, s):
        """
        :type s: str
        :rtype: bool
        """
        c=[]
        vow=['a','e','i','o','u']
        for v in vow:
            if(v in s):
                return True
        return False
